# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  name: 'Default'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# 1. Instalar herramientas de NuGet
- task: NuGetToolInstaller@1

# 2. Preparar análisis de SonarCloud
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudConnection'
    organization: 'queboRestaurant'
    projectKey: 'quebo'
    projectName: 'QueboRestaurant'
    scannerMode: 'MSBuild'
    extraProperties: |
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml

# 3. Restaurar paquetes NuGet
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# 4. Compilar el proyecto con MSBuild
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# 5. Ejecutar pruebas con VSTest
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# 6. Ejecutar análisis de SonarCloud
- task: SonarCloudAnalyze@1

# 7. Publicar los resultados en SonarCloud
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '600'